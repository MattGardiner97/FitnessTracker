@model FitnessTracker.ViewModels.GoalViewModel

@{
    ViewData["Title"] = Model.Goal.Activity;
}

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
    <script src="~/js/Goal/viewgoal.js">
    </script>
}

@switch (Model.Goal)
{
    case WeightliftingGoal wg:
        <div class="d-none" id="ProgressType" data-goaltype="weightlifting" data-goalid="@Model.Goal.ID"></div>
        break;
    case TimedGoal tg:
        <div class="d-none" id="ProgressType" data-goaltype="timed" data-goalid="@Model.Goal.ID"></div>

        break;
}

<div class="row">
    <div class="col">
        <div class="card">
            <div class="card-header">
                <h4 class="d-inline">@Model.Goal.Activity</h4>
                <button type="button" class="btn btn-danger dropdown-toggle float-right" data-toggle="dropdown">Options</button>
                <div class="dropdown-menu">
                    <a asp-action="EditGoal" asp-route-ID="@Model.Goal.ID" class="dropdown-item">Edit</a>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-7" style="padding-bottom:3rem;">
                        <div class="row">
                            <div class="col border-right text-center">
                                <h3 class="border-bottom pb-2">Goal</h3>

                                @switch (Model.Goal)
                                {
                                    case WeightliftingGoal wg:

                                        <div class="row pt-3">
                                            <div class="col">
                                                <h3 id="WeightliftingGoal" data-goal="@wg.Weight">@(wg.Weight)kg</h3>
                                                <small>Weight</small>
                                            </div>
                                            <div class="col">


                                                <h3>@(wg.Reps)</h3>
                                                <small>Reps</small>

                                            </div>
                                        </div>
                                        break;
                                    case TimedGoal tg:
                                        <div class="row pt-3">
                                            <div class="col">
                                                <h3>@(tg.Quantity)</h3>
                                                <small>@tg.QuantityUnit</small>
                                            </div>
                                            <div class="col">
                                                <h3>@tg.Time.ToString("hh\\:mm\\:ss")</h3>
                                                <small>Time</small>
                                            </div>
                                        </div>
                                        break;
                                }
                            </div>
                            <div class="col border-right text-center">
                                <h3 class="border-bottom pb-2">Personal Best</h3>

                                @switch (Model.Goal)
                                {
                                    case WeightliftingGoal wg:
                                        WeightliftingProgress highestWeightRecord = (WeightliftingProgress)Model.Progress
                                            .OrderByDescending(record => ((WeightliftingProgress)record).Weight)
                                            .ThenBy(record => ((WeightliftingProgress)record).Reps)
                                            .FirstOrDefault();

                                        <div class="row pt-3">
                                            <div class="col">
                                                <h3>@(highestWeightRecord == null ? 0 : highestWeightRecord.Weight)kg</h3>
                                                <small>Weights</small>
                                            </div>
                                            <div class="col">
                                                <h3>@(highestWeightRecord == null ? 0 : highestWeightRecord.Reps)</h3>
                                                <small>Reps</small>
                                            </div>
                                        </div>

                                        <h6>@(highestWeightRecord == null ? "" : highestWeightRecord.Date.ToString("d"))</h6>
                                        break;

                                    case TimedGoal tg:
                                        TimedProgress lowestTimeRecord = (TimedProgress)Model.Progress
                                            .OrderBy(record => ((TimedProgress)record).Time)
                                            .ThenByDescending(record => ((TimedProgress)record).Quantity)
                                            .FirstOrDefault();
                                        <div class="row pt-3">
                                            <div class="col">
                                                <h3>@(lowestTimeRecord == null ? 0 : lowestTimeRecord.Quantity)</h3>
                                                <small>@(tg.QuantityUnit)</small>
                                            </div>

                                            <div class="col">
                                                <h3>@(lowestTimeRecord == null ? "00:00:00" : lowestTimeRecord.Time.ToString("hh\\:mm\\:ss")) </h3>
                                                <small>Time</small>
                                            </div>

                                        </div>
                                        <h6>@(lowestTimeRecord == null ? "" : lowestTimeRecord.Date.ToString("d"))</h6>
                                        break;
                                }

                            </div>

                            <div class="col border-right text-center">
                                <h3 class="border-bottom pb-2">Most Recent</h3>


                                @switch (Model.Goal)
                                {
                                    case WeightliftingGoal wg:

                                        WeightliftingProgress mostRecentWeightRecord = (WeightliftingProgress)Model.Progress
                                        .OrderByDescending(record => record.Date)
                                        .FirstOrDefault();

                                        <div class="row pt-3">
                                            <div class="col">
                                                <h3>@(mostRecentWeightRecord == null ? 0 : mostRecentWeightRecord.Weight)kg</h3>
                                                <small>Weight</small>
                                            </div>
                                            <div class="col">
                                                <h3>@(mostRecentWeightRecord == null ? 0 : mostRecentWeightRecord.Reps)</h3>
                                                <small>Reps</small>
                                            </div>
                                        </div>
                                        <h6>@(mostRecentWeightRecord == null ? "" : mostRecentWeightRecord.Date.ToString("d"))</h6>

                                        break;
                                    case TimedGoal tg:

                                        TimedProgress mostRecentTimeRecord = (TimedProgress)Model.Progress
                                        .OrderBy(record => record.Date)
                                        .FirstOrDefault();


                                        <div class="row pt-3">
                                            <div class="col">
                                                <h3>@(mostRecentTimeRecord == null ? 0 : mostRecentTimeRecord.Quantity)</h3>
                                                <small>@(tg.QuantityUnit)</small>
                                            </div>

                                            <div class="col">
                                                <h3>@(mostRecentTimeRecord == null ? "00:00:00" : mostRecentTimeRecord.Time.ToString("hh\\:mm\\:ss")) </h3>
                                                <small>Time</small>
                                            </div>
                                        </div>
                                        <h6>@(mostRecentTimeRecord == null ? "" : mostRecentTimeRecord.Date.ToString("d"))</h6>

                                        break;
                                }

                            </div>
                        </div>
                    </div>
                    <div class="col-5 d-flex flex-column pb-3">
                        <div style="min-height:100%;height:1px;overflow-y:auto">
                            <table class="table flex-grow-1">
                                <thead>
                                    <tr>
                                        <th>Date</th>

                                        @switch (Model.Goal)
                                        {
                                            case WeightliftingGoal wg:
                                                <th>Weight</th>
                                                <th>Reps</th>
                                                break;
                                            case TimedGoal tg:
                                                <th>Quantity</th>
                                                <th>Time</th>
                                                break;
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (GoalProgress progress in Model.Progress)
                                    {
                                        <tr>
                                            <td>@progress.Date.ToString("d")</td>

                                            @switch (progress)
                                            {
                                                case WeightliftingProgress wp:
                                                    <td>@(wp.Weight)kg</td>
                                                    <td>@wp.Reps</td>
                                                    break;
                                                case TimedProgress tp:
                                                    <td>@tp.Quantity @tp.QuantityUnit</td>
                                                    <td>@tp.Time.ToString("hh\\:mm\\:ss")</td>
                                                    break;
                                            }
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="flex-grow-1 d-flex mt-1">
                            <div class="flex-grow-1"></div>
                            <a class="font-weight-bold float-right" href="#" data-toggle="modal" data-target="#AddProgressModal">+Add Progress</a>
                        </div>
                    </div>
                </div>

                <hr class="mt-4"/>

                <div class="w-50 m-auto">
                    <h2 class="text-center">Progress</h2>
                    <canvas id="ProgressChart"></canvas>
                </div>
                
            </div>
        </div>
    </div>
</div>

@* Add progress modal window *@
<div class="modal fade" id="AddProgressModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Add Progress</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span class="text-white" aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-action="AddProgress" method="post">
                <div class="modal-body">
                    <input type="hidden" name="GoalID" value="@Model.Goal.ID" required />
                    @{
                        string typeValue = "";
                        switch (Model.Goal)
                        {
                            case WeightliftingGoal wg:
                                typeValue = "Weightlifting";
                                break;
                            case TimedGoal tg:
                                typeValue = "Timed";
                                break;
                        }
                        <input type="hidden" name="Type" value="@typeValue" required />
                    }

                    <div class="form-group">
                        <label>Date</label>
                        <input type="date" name="Date" class="form-control" value="@DateTime.Today.ToString("yyyy-MM-dd")"  required />
                    </div>

                    @switch (Model.Goal)
                    {
                        case WeightliftingGoal wg:
                            <div class="form-group">
                                <label>Weight</label>
                                <input type="number" min="0" step="0.1" name="Weight" class="form-control" required />
                            </div>
                            <div class="form-group">
                                <label>Reps</label>
                                <input type="number" min="0" step="0.1" name="Reps" class="form-control" required />
                            </div>

                            break;
                        case TimedGoal tg:

                            <div class="form-group">
                                <label>Quantity</label>
                                <input type="number" min="0" name="Quantity" placeholder="@tg.QuantityUnit" class="form-control" required />
                            </div>
                            <div class="form-group">
                                <label>Time</label>
                                <div class="form-inline">
                                    <input type="number" min="0" max="24" step="1" name="Hours" placeholder="Hours" class="form-control" required />
                                    <input type="number" min="0" max="60" step="1" name="Minutes" placeholder="Minutes" class="form-control" required />
                                    <input type="number" min="0" max="60" step="1" name="Seconds" placeholder="Seconds" class="form-control" required/>
                                </div>
                            </div>

                            break;
                    }

                </div>
                <div class="modal-footer">
                    <input type="reset" class="btn btn-secondary" data-dismiss="modal" value="Cancel" />
                    <input type="submit" class="btn btn-primary" value="Save" />
                </div>
            </form>
        </div>
    </div>
</div>